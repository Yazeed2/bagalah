{"version":3,"sources":["pages/List.jsx","pages/Order.jsx","pages/Name.jsx","App.js","serviceWorker.js","index.js"],"names":["List","state","orders","done","id","axios","delete","then","data","console","log","catch","err","ord","filter","_id","setState","get","this","map","style","width","margin","border","borderRadius","padding","color","amount","fontSize","order","name","Button","variant","onClick","length","textAlign","Component","Order","children","props","numChildren","e","tring","target","value","add","push","onSubmit","forEach","post","next","i","Form","Group","controlId","Label","Control","onChange","size","type","placeholder","className","marginBottom","Name","marginTop","Text","App","status","header","addName","body","nope","Navbar","bg","Brand","href","Alert","nop","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9c393076.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport {Button} from 'react-bootstrap'\n\nexport default class List extends Component {\n    state={\n        orders:[]\n    }\n    componentDidMount(){\n        axios.get('/server/')\n        .then(data => {this.setState({\n            orders: data.data\n        })\n    console.log(data.data);\n    \n    })\n        .catch(err=>console.log(err))\n    }\n    done=(id)=>{\n        axios.delete('/server/'+id)\n        .then(data => console.log(data))\n        .catch(err=>console.log(err))\n\n   \n        let ord = this.state.orders.filter(data => data._id !=id)\n        this.setState({\n            orders:ord\n        })\n        console.log(\n          ord\n            );\n    }\n    render() {\n        return (\n            <div >\n                {this.state.orders.map(data=><>\n                <div style={{width:'80%', margin:'10px auto', border:'solid #f0f0f0 2px', borderRadius:'10px',padding:'20px'}}>\n<span style={{color:'blue'}}>{data.amount}X</span> <span style={{fontSize:'25px'}}> {data.order} </span> <br/>\n<span style={{color:'gray',fontSize:'12px'}}>\norder by: {data.name}\n</span>\n<br/> <Button variant=\"danger\" onClick={()=>this.done(data._id)}>X</Button>\n                </div>\n                </>)}\n                {this.state.orders.length?'': <h1 style={{textAlign:'center',color:'rgba(255,0,0,0.7)'}}>nothing ¯\\_(ツ)_/¯ </h1>}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Form, Button, Alert} from 'react-bootstrap'\nimport axios from 'axios'\nvar done = ''\nexport default class Order extends Component {\n    state={\n        children:[],\n        orders:[{order: '', amount:'1', name:this.props.name}],\n        numChildren:1,\n    \n    }\n    componentDidMount(){\n        if(!this.props.name){\n            this.props.next(\n            'first'\n            )\n        }\n    }\n\n    order=(e)=>{\n        var tring = e.target.name\n\n        this.state.orders[tring].order = e.target.value\n        console.log(this.state);\n\n    }\n    amount=(e)=>{\n        var tring = e.target.name\n\n        this.state.orders[tring].amount = e.target.value\n        console.log(this.state);\n\n    }\n   \n    add = ()=>{\n        this.setState({\n            numChildren: this.state.numChildren + 1,\n          })\n          this.state.orders.push(\n            {order: '', amount:'1', name:this.props.name}\n          )\n        console.log(this.state.numChildren);\n        \n        \n    }\n\n\n\n\n    onSubmit=()=>{ \n        var ok = []\n       this.state.orders.forEach(data=>{ \n           axios.post('/server/',data)\n\n           .then(done => {\n        this.props.done()\n            \n        })\n            .catch(err => console.log(err))\n       })\n    //    if(ok.length == this.state.orders.length){\n    //     this.setState({\n    //         done:true\n    //     })\n    //     console.log('you')\n    //    }\n \n    \n    \n    }\n\n\n\n\n\n\n    render() {\n         const children = [];\n\n\n        for (var i = 0; i < this.state.numChildren; i += 1) {\n          children.push(<Form.Group controlId=\"formBasicEmail\"style={{border:'solid #f0f0f0 2px', padding: '10px', borderRadius:'10PX'}}>\n          <Form.Label>what is it?</Form.Label>\n          <Form.Control onChange={this.order} name={i} size=\"md\" type=\"name\" placeholder=\"product Name \" style={{width:'100%', margin:'10px auto'}}/>\n      \n      \n         \n          <Form.Label >Amount</Form.Label>\n      \n          <Form.Control type=\"number\" onChange={this.amount}  name={i} size='sm' placeholder=\"999\" style={{width:'30%'}}/>\n             \n          </Form.Group>);\n        };   \n    \n        return (\n\n            <div >\n               \n                <h5 style={{margin:'0 10%'}} className=\"primary\">Orders</h5>\n\n          <Form style={{textAlign:'', padding:'10%'}}>\n               {children}\n <Button variant=\"primary\" onClick={this.add} style={{width: '100%', marginBottom:'20px'}}>\n    + \n  </Button>\n  <Button variant=\"primary\" onClick={this.onSubmit}>\n    Submit\n  </Button>\n</Form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Form, Button} from 'react-bootstrap'\n\nexport default class Name extends Component {\n    onSubmit=()=>{\n        this.props.add(this.state.name)\n    }\n    onChange = (e)=>{\n        this.setState({\n          [e.target.name] : e.target.value\n        })\n\n    }\n    render() {\n        return (\n            <div className=\"hodler\">\n\n                <Form style={{textAlign:'', padding:'10%' ,marginTop:'22vh'}}>\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Name</Form.Label>\n    <Form.Control onChange={this.onChange} name='name' size=\"md\" type=\"name\" placeholder=\"esmk pls :))\" style={{width:'100%', margin:'10px auto'}}/>\n    <Form.Text className=\"text-muted\">\n\n        3shaan alflooooos ¯\\_(ツ)_/¯ </Form.Text>\n  </Form.Group>\n\n\n\n  <Button variant=\"primary\" onClick={this.onSubmit} type=\"submit\" onSubmit={this.onSubmit}>\n    Submit\n  </Button>\n</Form>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport List from './pages/List'\nimport Order from './pages/Order'\nimport Name from './pages/Name'\nimport {Navbar, Button,Alert}  from 'react-bootstrap'\n\nexport default class App extends Component {\n  state={ \n    status: 'first'\n  }\n  next = (header)=>{\n    this.setState({\n      status: header\n    })\n  }\n  addName = (body)=>{\n    this.setState({\n      name:body\n    })\n    if(body == \"yazeed2\"){\n      this.setState({\n        status: 'list'\n      })\n    }else{ \n      this.setState({\n        status: 'order'\n      })\n    }\n  }\n  done= ()=>{\n    this.setState({done:true})\n  }\n  nope=()=>{\n    this.setState({nope:true})\n\n  }\n  render() {\n    return (\n      <div>\n\n  <Navbar bg=\"dark\" variant=\"dark\" >\n    <Navbar.Brand href=\"#home\">\n\n   E-ba8alah\n    </Navbar.Brand>\n  </Navbar>\n  {this.state.done? <Alert  variant='success'>\n        Done ^_^\n      </Alert> :''}\n      {this.state.nope? <Alert  variant='danger'>\n        Done ^_^\n      </Alert> :''}\n  <Button variant=\"outline-info\" style={{margin:'10%'}} onClick={()=>this.setState({status:'first'})}>{'<-'}</Button>\n\n\n{this.state.status === \"first\"? <Name add={this.addName}  next={this.next}/> : ''}\n{this.state.status === \"order\"? <Order nope={this.state.nop} done={this.done} name={this.state.name} next={this.next}/> : ''}\n{this.state.status === \"list\"? <List next={this.next}/> : ''}\n\n      </div>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}